# Global Settings for notifications
global_defs {
    notification_email {
        id@domain.com     # Email address for notifications 
    }
    notification_email_from id@domain.com	# The from address for the notifications
    smtp_server 127.0.0.1     			# SMTP server address
    smtp_connect_timeout 15
}
  
# Define the script used to check if haproxy is still working
vrrp_script chk_haproxy { 
    script "/usr/bin/killall -0 haproxy"
    interval 2 
    weight 2 
}
  
# Configuration for Virtual Interface
vrrp_instance LB_VIP {
    interface {{ ip_nic }}
    state {{ ip_state }}        # set to BACKUP on the peer machine

    virtual_router_id 51

{% if ip_state == 'MASTER' %}
    priority 101        

    unicast_src_ip {{ hostvars['proxy-01'].ansible_host }}    # Private IP address of master

    unicast_peer {
        {{ hostvars['proxy-02'].ansible_host }}		# Private IP address of the backup haproxy
    }
{% else %}
    priority 100       

    unicast_src_ip {{ hostvars['proxy-02'].ansible_host }}

    unicast_peer {
        {{ hostvars['proxy-01'].ansible_host }}
    }
{% endif %}

    # The virtual ip address shared between the two loadbalancers
    virtual_ipaddress {
        {{ ip_vrrp }}
    }

{% if smtp_alert == 'yes' %}
    smtp_alert          # Enable Notifications Via Email
{% endif %}
  
    authentication {
        auth_type AH
        auth_pass {{ vrrpd_credentials }}	# Password for accessing vrrpd. Same on all devices
    }

    # Use the Defined Script to Check whether to initiate a fail over
    track_script {
        chk_haproxy
    }
}
